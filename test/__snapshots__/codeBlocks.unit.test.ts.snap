// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`Code Block Syntax > Code Blocks 1`] = `
"<!-- .slide: class="drop" -->
<div class="" style="position: absolute; left: 0px; top: 0px; height: 700px; width: 960px; min-height: 700px; display: flex; flex-direction: column; align-items: center; justify-content: center" absolute="true">

\`\`\`dockerfile
FROM ubuntu
\`\`\`
</div>"
`;

exports[`Code Block Syntax > Code Blocks with $ and underscores 1`] = `
"<!-- .slide: class="drop" -->
<div class="" style="position: absolute; left: 0px; top: 0px; height: 700px; width: 960px; min-height: 700px; display: flex; flex-direction: column; align-items: center; justify-content: center" absolute="true">

\`\`\`dockerfile
USER $USER_NAME:$USER_NAME
\`\`\`
</div>"
`;

exports[`Code Block Syntax > Math with Code Blocks 1`] = `
"<!-- .slide: class="drop" -->
<div class="" style="position: absolute; left: 0px; top: 0px; height: 700px; width: 960px; min-height: 700px; display: flex; flex-direction: column; align-items: center; justify-content: center" absolute="true">

$$\\begin{vmatrix}a & b\\\\\\c & d\\end{vmatrix}=ad-bc$$

\`\`\`dockerfile
USER $USER_NAME:$USER_NAME
\`\`\`

You can also do inline math like $s^{-2}\\_{n}\\sum\\_{i=1}^{n}$
</div>"
`;

exports[`Code Block Syntax > Math with Mixed Code Blocks 1`] = `
"<!-- .slide: class="drop" -->
<div class="" style="position: absolute; left: 0px; top: 0px; height: 700px; width: 960px; min-height: 700px; display: flex; flex-direction: column; align-items: center; justify-content: center" absolute="true">

$$\\begin{vmatrix}a & b\\\\\\c & d\\end{vmatrix}=ad-bc$$

\`\`\`\`md
\`\`\`dockerfile
USER $USER_NAME:$USER_NAME
\`\`\`
\`\`\`\`

You can also use inline syntax (\`$s^{-2}_{n}\\sum_{i=1}^{n}$\`)
to do inline math like $s^{-2}\\_{n}\\sum\\_{i=1}^{n}$
</div>"
`;

exports[`Code Block Syntax > codeblock-ish, not math 1`] = `
"<!-- .slide: class="drop" -->
<div class="" style="position: absolute; left: 0px; top: 0px; height: 700px; width: 960px; min-height: 700px; display: flex; flex-direction: column; align-items: center; justify-content: center" absolute="true">

\`\`\`
USER $USER_NAME:$USER_NAME
\`\`\`

The above does not show backticks.
Underscores should not be escaped
</div>"
`;

exports[`Code Block Syntax > no type 1`] = `
"<!-- .slide: class="drop" -->
<div class="" style="position: absolute; left: 0px; top: 0px; height: 700px; width: 960px; min-height: 700px; display: flex; flex-direction: column; align-items: center; justify-content: center" absolute="true">

\`\`\`
USER $USER_NAME:$USER_NAME
\`\`\`

The above does not show backticks
</div>"
`;

exports[`Embedded code has extra characters near dollar signs 1`] = `
"<!-- .slide: class="drop" -->
<div class="" style="position: absolute; left: 0px; top: 0px; height: 700px; width: 960px; min-height: 700px; display: flex; flex-direction: column; align-items: center; justify-content: center" absolute="true">

\`\`\`javascript
export class CounterService {
  count$ = new BehaviorSubject(1000);

  double$ = this.count$.pipe(map((count) => count * 2));
  triple$ = this.count$.pipe(map((count) => count * 3));

  combined$ = combineLatest([this.double$, this.triple$]).pipe(
    map(([double, triple]) => double + triple)
  );

  over9000$ = this.combined$.pipe(map((combined) => combined > 9000));

  message$ = this.over9000$.pipe(
    map((over9000) => (over9000 ? "It's over 9000!" : "It's under 9000."))
  );
}
\`\`\`
</div>"
`;
